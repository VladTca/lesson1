// * 2. –æ–±–µ—Ä—Ç–∫–∞ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –Ω–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–∞—é—â–∞—è –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
import React, {createContext, useContext, useState} from "react";

// —Ç–∏–ø–∏–∑–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –∫–æ—Ä–∑–∏–Ω—ã
export interface ICartItem {
    id: number;
    title: string;
    price: number;
    quantity: number;
}

// —Ç–∏–ø–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
interface ICartContextType {
    // –∫–æ—Ä–∑–∏–Ω–∞
    cart: ICartItem[];
    // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
    addToCart: (product: ICartItem) => void;
    // —É–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
    removeFromCart: (id: number) => void
    // –æ—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
    clearCart: () => void;
}


// * 1. –¥–µ–ª–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å –ø–æ–º–æ—â—å—é –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –≤ react –º–µ—Ç–æ–¥–∞ createContext()
export const CartContext = createContext<ICartContextType | undefined>(undefined)


export const CartProvider = ({children}: {children: React.ReactNode}) => {
    // –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    const [cart, setCart] = useState<ICartItem[]>([])

    // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
    const addToCart = (product: ICartItem) => {
        setCart(prevCart => {
            // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
            const productExist = prevCart.find(item => item.id === product.id)
            if (productExist) {
                // –µ—Å–ª–∏ —Ç–∞–∫–æ–π –ø—Ä–æ–¥—É–∫—Ç —É–∂–µ –µ—Å—Ç—å –º—ã —É –Ω–µ–≥–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º quantity –Ω–∞ 1
                return prevCart.map(item => item.id === product.id ? {...item, quantity: item.quantity + 1} : item)
            }
            // –µ—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –Ω–µ—Ç, —Ç–æ –º—ã –µ–≥–æ –¥–æ–±–∞–≤–ª—è–µ–º –∏ –≤ –∑–Ω–∞—á–µ–Ω–∏–∏ quantity —É–∫–∞–∑—ã–≤–∞–µ–º 1
            return [...prevCart, {...product, quantity: 1}]
        })
    }

    // —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
    const removeFromCart = (id: number) => {
        setCart(prevCart => prevCart.filter(item => item.id !== id))
    }

    // –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
    const clearCart = () => {
        setCart([])
    }

    return (
        // –∑–∞ –º–µ—Å—Ç–æ children –ø—Ä–∏–¥—É—Ç –æ–±–µ—Ä–Ω—É—Ç—ã–µ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —ç–ª–µ–º–µ–Ω—Ç—ã
        // –∑–∞ —Å—á–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —ç—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ–ª—É—á–∞—Ç –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º –≤ —ç—Ç–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
        <CartContext.Provider value={{cart, addToCart, removeFromCart, clearCart}}>
            {children}
        </CartContext.Provider>
    )
}


// ! —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
// —Å–æ–∑–¥–∞–µ–º –∑–¥–µ—Å—å, –Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
// –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –Ω–∞ undefined

export const useCart = () => {
    const contextData = useContext(CartContext);
    if (!contextData) {
        throw new Error('no such context üòµ')
    }
    return contextData;
};